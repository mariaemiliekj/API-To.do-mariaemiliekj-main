{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Todo API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to create a new user.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to login with email and password",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todos/": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Return all the logged in users todo's with the category associated with each todo and status that is not the deleted status.",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Todos"
        ],
        "description": "Endpoint to create a new todo with their category for the logged in user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Todo information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/todos/all": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Return all the users todos including todos with a deleted status.",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/todos/deleted": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Return all the todos with the deleted status",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/todos/statuses": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Return all the statuses from the database",
        "produces": [
          "text/html"
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/todos/{id}": {
      "put": {
        "tags": [
          "Todos"
        ],
        "description": "Endpoint to Change/update a specific todo for logged in user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Todo example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoEdit"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Todos"
        ],
        "description": "Endpoint to delete a specific todo for the logged in user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/category/": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Get all categories for the logged-in user.",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "description": "Endpoint to create a new category",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Category example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/category/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "description": "Endpoint to edit a category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Category example.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryEdit"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "description": "Endpoint to delete a category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/status/": {
      "get": {
        "tags": [
          "Status"
        ],
        "description": "Gets the list of all statuses.",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "testUser123@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "123"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "Users": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "testUser123"
        },
        "email": {
          "type": "string",
          "example": "testUser123@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "123"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Gym"
        }
      }
    },
    "CategoryEdit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Choose a new category name here!"
        }
      }
    },
    "Todo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Todo created!"
        },
        "description": {
          "type": "string",
          "example": "A test for creating a todo"
        },
        "categoryId": {
          "type": "string",
          "example": "2"
        },
        "statusId": {
          "type": "string",
          "example": "1"
        }
      }
    },
    "TodoEdit": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Update the todo name here!"
        },
        "description": {
          "type": "string",
          "example": "Update the description here"
        },
        "categoryId": {
          "type": "string",
          "example": "Update id, example: 4"
        },
        "statusId": {
          "type": "string",
          "example": "Update status, example: 3"
        }
      }
    }
  }
}